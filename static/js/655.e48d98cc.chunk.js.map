{"version":3,"file":"static/js/655.e48d98cc.chunk.js","mappings":"yOAMA,EANqB,CACnBA,KAAM,GACNC,MAAO,GACPC,SAAU,ICsBZ,EAzBe,CACbF,KAAM,CACJG,MAAO,YACPC,KAAM,OACNJ,KAAM,OACNK,UAAU,EACVC,YAAa,QAEfL,MAAO,CACLE,MAAO,aACPC,KAAM,QACNJ,KAAM,QACNK,UAAU,EACVC,YAAa,SAEfJ,SAAU,CACRC,MAAO,gBACPC,KAAM,WACNJ,KAAM,WACNK,UAAU,EACVC,YAAa,WACbC,aAAc,Q,SCYlB,EAzBqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDC,aAAAA,EACAF,SAAAA,IAFMG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAIrBb,EAA0BW,EAA1BX,KAAMC,EAAoBU,EAApBV,MAAOC,EAAaS,EAAbT,SAErB,OACE,kBAAMM,SAAUK,EAAhB,WACE,SAACC,EAAA,GAAD,QAAWC,MAAOf,EAAMY,aAAcA,GAAkBI,EAAAA,QACxD,SAACF,EAAA,GAAD,QAAWC,MAAOd,EAAOW,aAAcA,GAAkBI,EAAAA,SACzD,SAACF,EAAA,GAAD,QACEC,MAAOb,EACPU,aAAcA,GACVI,EAAAA,YAEN,SAACC,EAAA,EAAD,wBAGL,E,UCND,EAfqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iCACE,2CACA,SAAC,EAAD,CAAcX,SAPG,SAAAY,GACnBF,GAASG,EAAAA,EAAAA,IAAYD,GACtB,MAQF,C,mHCJD,EAdkB,SAAC,GAAuC,IAArCjB,EAAoC,EAApCA,MAAOS,EAA6B,EAA7BA,aAAiBU,GAAY,YACvD,OACE,6BACGnB,GACD,0BAAOoB,SAAUX,GAAkBU,MAGxC,C,kECiBD,IAvBgB,SAAC,GAAgC,IAA9BZ,EAA6B,EAA7BA,aAAcF,EAAe,EAAfA,SAC/B,GAA0BgB,EAAAA,EAAAA,WAAS,UAAKd,IAAxC,eAAOC,EAAP,KAAcc,EAAd,KAmBA,MAAO,CAAEd,MAAAA,EAAOc,SAAAA,EAAUb,aAjBL,SAAC,GAAgB,IAAdc,EAAa,EAAbA,OACtBD,GAAS,SAAAE,GACP,IAAQ3B,EAAgB0B,EAAhB1B,KAAMe,EAAUW,EAAVX,MAKd,OAAO,kBAAKY,GAAZ,cAAwB3B,EAAOe,GAChC,GACF,EAQuCF,aANnB,SAAAe,GACnBA,EAAEC,iBACFrB,GAAS,UAAKG,IACdc,GAAS,UAAKf,GACf,EAGF,C","sources":["components/forms/RegisterForm/initialState.js","components/forms/RegisterForm/fields.js","components/forms/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  name: {\n    label: 'User name',\n    type: 'text',\n    name: 'name',\n    required: true,\n    placeholder: 'Name',\n  },\n  email: {\n    label: 'User email',\n    type: 'email',\n    name: 'email',\n    required: true,\n    placeholder: 'Email',\n  },\n  password: {\n    label: 'User password',\n    type: 'password',\n    name: 'password',\n    required: true,\n    placeholder: 'Password',\n    autoComplete: 'off',\n  },\n};\n\nexport default fields;\n","import PropTypes from 'prop-types';\nimport TextField from 'shared/components/TextField';\nimport Button from 'shared/components/Button';\n\nimport useForm from 'shared/hooks/useForm';\nimport initialState from './initialState';\nimport fields from './fields';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { name, email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField value={name} handleChange={handleChange} {...fields.name} />\n      <TextField value={email} handleChange={handleChange} {...fields.email} />\n      <TextField\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <Button>Sign up</Button>\n    </form>\n  );\n};\n\nRegisterForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default RegisterForm;\n","import { useDispatch } from 'react-redux';\n\nimport RegisterForm from 'components/forms/RegisterForm';\n\nimport { fetchSignup } from 'redux/auth/operations';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSignup = data => {\n    dispatch(fetchSignup(data));\n  };\n\n  return (\n    <>\n      <h1>Register Page</h1>\n      <RegisterForm onSubmit={handleSignup} />\n    </>\n  );\n};\n\nexport default RegisterPage;\n","import PropTypes from 'prop-types';\nconst TextField = ({ label, handleChange, ...props }) => {\n  return (\n    <label>\n      {label}\n      <input onChange={handleChange} {...props} />\n    </label>\n  );\n};\n\nTextField.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default TextField;\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value } = target;\n      // const { name, value, checked, type } = target;\n      // const newValue = type === \"checkbox\" ? checked : value;\n      // return { ...prevState, [name]: newValue };\n\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["name","email","password","label","type","required","placeholder","autoComplete","onSubmit","useForm","initialState","state","handleChange","handleSubmit","TextField","value","fields","Button","dispatch","useDispatch","data","fetchSignup","props","onChange","useState","setState","target","prevState","e","preventDefault"],"sourceRoot":""}