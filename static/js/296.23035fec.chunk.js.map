{"version":3,"file":"static/js/296.23035fec.chunk.js","mappings":"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","sources":["components/forms/LoginForm/initialState.js","components/forms/LoginForm/fields.js","components/forms/LoginForm/styles.jsx","components/forms/LoginForm/LoginForm.jsx","pages/LoginPage/styles.jsx","pages/LoginPage/LoginPage.jsx","shared/components/TextField/styles.jsx","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs"],"sourcesContent":["const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  email: {\n    label: 'User email',\n    type: 'email',\n    name: 'email',\n    required: true,\n    placeholder: 'Email',\n    autoComplete: 'on',\n  },\n  password: {\n    label: 'User password',\n    type: 'password',\n    name: 'password',\n    required: true,\n    placeholder: 'Password',\n    autoComplete: 'on',\n  },\n};\n\nexport default fields;\n","export const styles = {\n  form: {\n    w: '450px',\n    m: '0 auto',\n    align: 'center',\n  },\n\n  title: {\n    bg: 'blue.500',\n    mb: '8px',\n    p: '10px 10px 15px',\n    boxShadow: 'xl',\n    rounded: 'md',\n    color: 'white',\n    fontSize: '2xl',\n  },\n};\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { chakra, Text } from '@chakra-ui/react';\n\nimport TextField from 'shared/components/TextField';\nimport Button from 'shared/components/Button';\nimport useForm from 'shared/hooks/useForm';\nimport initialState from './initialState';\nimport fields from './fields';\n\nimport { selectIsLoading } from 'redux/auth/slice';\n\nimport { styles } from './styles';\n\nconst LoginterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { email, password } = state;\n\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <chakra.form onSubmit={handleSubmit} {...styles.form}>\n      <Text {...styles.title}>Login Form</Text>\n      <TextField value={email} handleChange={handleChange} {...fields.email} />\n      <TextField\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <Button>{isLoading ? <div>Loading...</div> : <span>Log in</span>}</Button>\n    </chakra.form>\n  );\n};\n\nLoginterForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default LoginterForm;\n","export const styles = {\n  page: {\n    pos: 'relative',\n    top: '78px',\n    p: '30px 20px',\n    h: '100vh',\n    bg: 'blue.50',\n  },\n};\n","import { useDispatch } from 'react-redux';\nimport { Box } from '@chakra-ui/react';\n\nimport LoginForm from 'components/forms/LoginForm';\n\nimport { fetchLogin } from 'redux/auth/operations';\n\nimport { styles } from './styles';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const handleLogin = data => {\n    dispatch(fetchLogin(data));\n  };\n\n  return (\n    <Box {...styles.page}>\n      <LoginForm onSubmit={handleLogin} />\n    </Box>\n  );\n};\n\nexport default LoginPage;\n","import { PhoneIcon, EmailIcon, LockIcon } from '@chakra-ui/icons';\nimport { VscAccount, VscListFilter } from 'react-icons/vsc';\nimport { Icon } from '@chakra-ui/icons';\n\nexport const icon = props => {\n  if (props.name === 'name') {\n    return <Icon as={VscAccount} />;\n  } else if (props.name === 'email') {\n    return <EmailIcon />;\n  } else if (props.name === 'password') {\n    return <LockIcon />;\n  } else if (props.name === 'number') {\n    return <PhoneIcon />;\n  } else if (props.name === 'filter') {\n    return <Icon as={VscListFilter} />;\n  } else {\n    return null;\n  }\n};\n\nexport const isRequired = props => {\n  if (props.name === 'filter') return false;\n  return true;\n};\n\nexport const styles = {\n  formControl: {\n    colorScheme: 'whiteAlpha',\n    bg: 'gray.50',\n    mb: '8px',\n    p: '10px 10px 15px',\n    boxShadow: 'xl',\n    rounded: 'md',\n  },\n\n  icon: {\n    pointerEvents: 'none',\n    color: 'gray.400',\n  },\n\n  input: { size: 'md', variant: 'flushed' },\n};\n","import PropTypes from 'prop-types';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputLeftElement,\n} from '@chakra-ui/react';\n\nimport { icon, isRequired, styles } from './styles';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  return (\n    <>\n      <FormControl {...styles.formControl} isRequired={isRequired(props)}>\n        <FormLabel m=\"0\">{label}</FormLabel>\n        <InputGroup>\n          <InputLeftElement {...styles.icon} children={icon(props)} />\n          <Input {...styles.input} onChange={handleChange} {...props} />\n        </InputGroup>\n      </FormControl>\n    </>\n  );\n};\n\nTextField.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default TextField;\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value } = target;\n      // const { name, value, checked, type } = target;\n      // const newValue = type === \"checkbox\" ? checked : value;\n      // return { ...prevState, [name]: newValue };\n\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n"],"names":["name","email","password","label","type","required","placeholder","autoComplete","styles","w","m","align","bg","mb","p","boxShadow","rounded","color","fontSize","onSubmit","useForm","initialState","state","handleChange","handleSubmit","isLoading","useSelector","selectIsLoading","TextField","value","fields","Button","pos","top","h","dispatch","useDispatch","LoginForm","data","fetchLogin","icon","props","as","VscAccount","VscListFilter","isRequired","colorScheme","pointerEvents","size","variant","children","I","onChange","useState","setState","target","prevState","e","preventDefault","Text","forwardRef","ref","useStyleConfig","omitThemingProps","rest","className","decoration","casing","aliasedProps","compact","textAlign","textDecoration","textTransform","jsx","chakra","cx","__css","displayName"],"sourceRoot":""}