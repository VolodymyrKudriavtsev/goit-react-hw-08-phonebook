{"version":3,"file":"static/js/888.64d15bfb.chunk.js","mappings":"kUASIA,GAAOC,EAAAA,EAAAA,IAAW,SAAeC,EAAOC,GAC1C,IAAMC,GAASC,EAAAA,EAAAA,IAAe,OAAQH,GACtC,GAA2CI,EAAAA,EAAAA,IAAiBJ,GAApDK,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAeC,GAAlC,YACA,OAAuBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,GADwB,QAAC,QAGvBC,OAAQJ,EAAa,cAAW,EAChCK,IAAKL,EAAa,gBAAa,EAC/BL,IAAAA,EACAI,WAAWO,EAAAA,EAAAA,IAAG,cAAeP,IAC1BE,GAPmB,IAQtBM,MAAOX,IAGZ,IACDJ,EAAKgB,YAAc,OCxBZ,IAAMZ,EACL,CACJa,MAAO,aACPC,OAAQ,CAAED,MAAO,aAAcE,eAAgB,cCiBnD,EAhBqB,WACnB,OACE,UAAC,IAAD,CAAMC,SAAS,MAAMC,MAAM,SAA3B,uEAC6D,KAC3D,SAACrB,GAAD,gBAAMsB,GAAIC,EAAAA,GAAWC,GAAG,aAAgBpB,GAAxC,2BAEQ,IAJV,KAKK,KACH,SAACJ,GAAD,gBAAMsB,GAAIC,EAAAA,GAAWC,GAAG,UAAapB,GAArC,yBANF,MAYH,EClBYA,EACL,CACJqB,IAAK,WACLC,IAAK,OACLC,EAAG,YACHC,EAAG,QACHC,GAAI,YCQR,EARiB,WACf,OACE,SAAC,MAAD,kBAASzB,GAAT,cACE,SAAC,EAAD,MAGL,C,kMCFG0B,GAAO7B,EAAAA,EAAAA,IAAW,SAAeC,EAAOC,GAC1C,IAAMC,GAASC,EAAAA,EAAAA,IAAe,OAAQH,GACtC,GAA0DI,EAAAA,EAAAA,IAAiBJ,GAA1BO,GAAjD,EAAQF,UAAR,EAAmBc,MAAnB,EAA0BU,WAA1B,EAAsCC,QAAtC,aACMC,GAAeC,EAAAA,EAAAA,IAAQ,CAC3BC,UAAWjC,EAAMmB,MACjBF,eAAgBjB,EAAM6B,WACtBK,cAAelC,EAAM8B,SAEvB,OAAuBtB,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,GADwB,QAAC,gBAGvBR,IAAAA,EACAI,WAAWO,EAAAA,EAAAA,IAAG,cAAeZ,EAAMK,YAChC0B,GACAxB,GANmB,IAOtBM,MAAOX,IAGZ,IACD0B,EAAKd,YAAc,M","sources":["../node_modules/@chakra-ui/layout/dist/chunk-YTV6DHKL.mjs","shared/components/WellcomText/styles.js","shared/components/WellcomText/WellcomeText.jsx","pages/HomePage/styles.jsx","pages/HomePage/HomePage.jsx","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs"],"sourcesContent":["// src/link.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport {\n  Link\n};\n","export const styles = {\n  link: {\n    color: 'yellow.400',\n    _hover: { color: 'yellow.500', textDecoration: 'underline' },\n  },\n};\n","import { Link as ReactLink } from 'react-router-dom';\nimport { Link, Text } from '@chakra-ui/react';\nimport { styles } from './styles';\n\nconst WellcomeText = () => {\n  return (\n    <Text fontSize=\"5xl\" align=\"center\">\n      Welcome to the Phone Book! To use this application, please{' '}\n      <Link as={ReactLink} to=\"/register\" {...styles.link}>\n        register\n      </Link>{' '}\n      or{' '}\n      <Link as={ReactLink} to=\"/login\" {...styles.link}>\n        log in\n      </Link>\n      .\n    </Text>\n  );\n};\n\nexport default WellcomeText;\n","export const styles = {\n  page: {\n    pos: 'relative',\n    top: '78px',\n    p: '30px 20px',\n    h: '100vh',\n    bg: 'green.50',\n  },\n};\n","import { Box } from '@chakra-ui/react';\n\nimport WellcomeText from '../../shared/components/WellcomText';\n\nimport { styles } from './styles';\n\nconst HomePage = () => {\n  return (\n    <Box {...styles.page}>\n      <WellcomeText />\n    </Box>\n  );\n};\n\nexport default HomePage;\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n"],"names":["Link","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","className","isExternal","rest","jsx","chakra","target","rel","cx","__css","displayName","color","_hover","textDecoration","fontSize","align","as","ReactLink","to","pos","top","p","h","bg","Text","decoration","casing","aliasedProps","compact","textAlign","textTransform"],"sourceRoot":""}